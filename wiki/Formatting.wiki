#summary how CL-SVG produces SVG's XML

The XML required by SVG is fairly trivial.  As a result CL-SVG doesn't
use more the several more powerful XML libraries available for Common
Lisp, but instead spits out XML directly itself.  The output is
handled by `format-xml.lisp` and relies heavily on some of the more
exotic options offered by `FORMAT`.

CL-SVG tries hard to produce XML readable by you and your editor.  As
a consequence there's a _lot_ of extra whitespace in the resulting SVG
files.  There are two global special variables to get some control of
this.

_special variable_
*`*float-format-precision*`*
  Controls how many digits after the decimal place to print in SVG
  element attributes.  It defaults to 2.  Highly precise floating
  point numbers for coordinates, etc., serve little purpose but to
  inflate the size of the SVG file.

_special variable_
*`*indent-spacing*`*
  Controls how many spaces to indend at each level of XML nesting.  It
  defaults to 2.  Set it to zero for no indentation.

Finally, the [Path pathing] utilities insert newlines more often than
is probably necessary, but again I wanted to balance readability with
a suggestion in the SVG spec that lines shouldn't be longer than 255
characters.  The API offers no control of this currently.
